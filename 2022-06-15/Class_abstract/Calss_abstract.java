package Class_abstract;

/* ★ 추상(abstract) 사전적 의미
 * 실체 간에 공통되는 특성을 추출한 것.
 * 	예1) 새, 곤충, 물고기 = 동물
 * 	예2) 삼성, 현대, LG = 회사
 * 
 * ★ 실체 클래스 = 객체를 직접 생성할 수 있는 클래스
 * 추상 클래스 = 실체 클래스들의 공통적ㅇㄴ 특성을 추출해서 선언한 클래스
 * 
 * ★ 추상 클래스와 실체 클래스의 관계 = 상속 관계
 * 추상 클래스(부모), 실체 클래스(자식)
 * 실체 클래스 = 추상 클래스의 모든 특성을 물려받고, 추가적인 특성을 가질 수 있다.
 * 
 * ★ 그 추가적인 특성이란? = 필드, 메소드
 * 	예) 실체 클래스 : Bird.class, Insect.class, Fish.class
 * 	   추상 클래스 : Animal.class(위 실체 클래스들의 공통되는 필드와 메소드를 따로 선언한 클래스)
 * 
 * ★ 추상 클래스
 * - 특징
 * 1. 객체를 직접 생성해서 사용할 수 없다. = new 연산자를 사용해서 인스턴스를 생성시키지 못함.
 * 	  왜? 실체 클래스의 공통되는 필드와 메소드를 추출해서 만들었기 때문
 * 2. 새로운 실체 클래스를 만들기 위해 부모 클래스로만 사용됨. = extends 뒤에만 올 수 있는 클래스
 * 
 * - 추상 클래스를 만드는 이유는?
 * 1. 실체 클래스들의 공통된 필드와 메소드의 이름을 통일할 목적
 * 설계하는 사람이 여러 사람일 경우, 실체 클래스마다 필드와 메소드가 제각기 다른 이름을 가질 수 있음.
 * 2. 실체 클래스를 작성할 때 시간을 절약
 * 공통적인 필드와 메소드는 추상 클래스인 Phone에 모두 선언해 두고, 실체 클래스마다 다른 점만 실체 클래스에
 * 선언하게 되면 실체 클래스를 작성하는데 시간을 절약할 수 있음.
 * 
 * - 추상 클래스 선언은 어떻게 하는가?
 * 클래스 선언에 abstract 키워드를 붙이면 됨. 
 * = new 연산자를 이용해 객체를 만들지 못함. 상속을 통해 자식 클래스만 만들 수 있음.
 * 
 * ★ 추상 클래스는 추상 메소드를 선언할 수 있다.
 * - 추상 메소드란?
 * 추상 메소드에서만 선언할 수 있는데, 메소드의 선언부만 있고 메소드 실행 내용인 중괄호 {}가 없는 메소드
 * 
 * - 언제 선언하는가?
 * 추상 클래스를 설계할 때, 하위 클래스가 반드시 실행 내용을 채우도록 강요하고 싶은 메소드가 있을 경우
 * 
 * - 추상 메소드를 선언 후, 자식 메소드에서 재정의(오버라이딩)하지 않으면?
 * 컴파일 에러 발생
 * 
 * - 일반 메소드와 추상 클래스의 차이
 * 추상 클래스는 avstract 키워드가 붙어 있고 메소드 중괄호{}가 없다.
 * 
 */

